import Head from "next/head";
import { type NextPage, type GetServerSideProps } from "next";
import axios from "axios";
import { type ScoredVector } from "@pinecone-database/pinecone";

import tw from "tailwind-styled-components";
import Header from "../components/Header";
import Footer from "../components/Footer";
import Content from "../components/Content";

export interface QueryVector {
  vector: number[];
  text: string;
  fullVector: number[];
}

export interface ContentProps {
  dataVectorArr: number[][];
  vectors: ScoredVector[];
  tempQueryVector: QueryVector;
}

const Home: NextPage<ContentProps> = ({
  vectors,
  dataVectorArr,
  tempQueryVector,
}) => {
  return (
    <>
      <Head>
        <title>Isomorphic</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <Header />
        <MainTitle>Superpower your embeddings</MainTitle>
        <Content
          vectors={vectors}
          dataVectorArr={dataVectorArr}
          tempQueryVector={tempQueryVector}
        />
        <Footer />
      </Main>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const baseUrl =
    process.env.NODE_ENV === "production"
      ? "https://isomorphic-alpha.vercel.app"
      : "http://localhost:3000";

  const randomStringToEmbed = "How was your day yesterday?";

  // Fetch the cached data from the JSON file in public folder
  const cachedJsonRes = await fetch(`${baseUrl}/cached_vectors.json`);
  const cachedJson = await cachedJsonRes.json();

  const cachedJsonQueryVec = await fetch(`${baseUrl}/example_query_vec.json`);
  const queryVec = await cachedJsonQueryVec.json();

  // Return the queryData as a prop
  return {
    props: {
      dataVectorArr: cachedJson.embeddings,
      vectors: cachedJson.embeddingInfo,
      tempQueryVector: {
        vector: queryVec.reduced_values,
        text: randomStringToEmbed,
        fullVector: queryVec.values,
      },
    },
  };
};

export default Home;

const Main = tw.main`
  flex 
  min-h-screen 
  flex-col
  bg-gradient-to-b 
  from-[#000000] 
  to-[#120F42]
`;

const MainTitle = tw.h1`
    text-2xl
    text-white
    font-bold
    mb-12
    text-center
    w-full
`;
